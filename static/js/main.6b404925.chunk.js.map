{"version":3,"sources":["components/Header.js","graphql/mutations.js","components/AddSong.js","graphql/subscriptions.js","reducer.js","components/SongList.js","components/QueuedSongList.js","graphql/queries.js","components/SongPlayer.js","App.js","theme.js","graphql/client.js","index.js"],"names":["useStyles","makeStyles","theme","title","marginLeft","spacing","Header","classes","AppBar","color","position","Toolbar","Typography","className","variant","component","ADD_SONG","gql","ADD_OR_REMOVE_FROM_QUEUE","container","display","alignItems","urlInput","margin","addSongButton","dialog","textAlign","thumbnail","width","DEFAULT_SONG","artist","duration","url","AddSong","useMutation","addSong","error","React","useState","setDialog","playable","setPlayable","setUrl","song","setSong","handleCloseDialog","a","player","nestedPlayer","getVideoData","songData","getYoutubeInfo","getDuration","video_id","author","variables","length","console","log","handleChangeSong","event","target","name","value","prevSong","handleError","field","graphQLErrors","extensions","path","includes","useEffect","isPlayable","YoutubePlayer","canPlay","Dialog","onClose","open","DialogTitle","DialogContent","alt","src","TextField","fullWidth","helperText","label","onChange","DialogActions","Button","onClick","InputProps","startAdornment","InputAdornment","Link","placeholder","type","disabled","endIcon","AddBoxOutlined","hidden","onReady","GET_SONGS","SongContext","createContext","id","isPlaying","SongReducer","state","action","payload","background","songInfoContainer","justifyContent","songInfo","height","objectFit","Song","useContext","dispatch","currentSongPlaying","setCurrentSongPlaying","onCompleted","data","localStorage","setItem","JSON","stringify","addOrRemoveFromQueue","isSongPlaying","Card","CardMedia","image","CardContent","gutterBottom","CardActions","IconButton","size","Pause","PlayArrow","input","__typename","Save","SongList","useSubscription","loading","style","flexDirection","marginTop","CircularProgress","songs","map","key","avatar","gridAutoFlow","gridGap","gridTemplateColumns","overflow","whiteSpace","text","textOverflow","QueuedSong","Avatar","Delete","QueuedSongList","queue","useMediaQuery","breakpoints","up","i","GET_QUEUED_SONGS","content","flex","controls","paddingLeft","paddingRight","details","padding","playIcon","SongPlayer","useQuery","played","setPlayed","seeking","setSeeking","reactPlayerRef","useRef","playedSeconds","setPlayedSeconds","positionInQueue","setPositionInQueue","songIndex","findIndex","nextSong","SkipPrevious","SkipNext","Date","toISOString","substr","Slider","max","min","newValue","onMouseDown","onMouseUp","current","seekTo","step","onProgress","playing","ref","App","greaterThanMd","initialSongState","useReducer","Provider","Grid","paddingTop","item","xs","md","right","top","createMuiTheme","overrides","MuiCssBaseline","body","backgroundRepeat","backgroundAttachment","palette","primary","main","secondary","typography","fontFamily","client","ApolloClient","link","WebSocketLink","uri","options","reconnect","cache","InMemoryCache","typeDefs","resolvers","Mutation","_","queryResult","readQuery","query","newQueue","some","filter","writeQuery","localQueue","getItem","Boolean","parse","writeData","ReactDOM","render","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.6b404925.chunk.js","sourcesContent":["import React from 'react';\nimport { AppBar, Toolbar, Typography, makeStyles } from '@material-ui/core';\nimport MusicNoteSharpIcon from '@material-ui/icons/MusicNoteSharp';\n\nconst useStyles = makeStyles(theme=>({\n    title:{\n        marginLeft: theme.spacing(1)\n    }\n}));\n\nfunction Header(){\n    const classes=useStyles();\n    return (\n        <AppBar color=\"primary\" position='fixed'>\n            <Toolbar>\n                <MusicNoteSharpIcon/>\n                <Typography className={classes.title} variant=\"h6\" component=\"h1\">\n                    Music Player\n                </Typography>\n            </Toolbar>\n        </AppBar>\n    );\n}\n\nexport default Header;","import {gql} from 'apollo-boost';\n\nexport const ADD_SONG = gql`\n    mutation addSong($title: String!, $artist: String!, $thumbnail: String!, $duration: Float!, $url: String!) {\n        insert_songs(objects: {title: $title, artist: $artist, thumbnail: $thumbnail, duration: $duration, url: $url}) {\n            affected_rows\n        }\n    }\n`\n\nexport const ADD_OR_REMOVE_FROM_QUEUE = gql`\n    mutation addOrRemoveFromQueue($input: SongInput!){\n        addOrRemoveFromQueue(input: $input) @client    \n    }\n`","import React from 'react';\nimport { Dialog, DialogActions, TextField, InputAdornment, Button, DialogTitle, DialogContent, makeStyles } from '@material-ui/core';\nimport { Link, AddBoxOutlined } from '@material-ui/icons'\nimport ReactPlayer from 'react-player';\n// import SoundcloudPlayer from 'react-player/lib/players/SoundCloud';\nimport YoutubePlayer from 'react-player/lib/players/YouTube';\nimport {ADD_SONG} from '../graphql/mutations';\nimport { useMutation } from '@apollo/react-hooks';\n\nconst useStyles = makeStyles(theme => ({\n    container:{\n        display: 'flex',\n        alignItems:'center'\n    },\n    urlInput:{\n        margin: theme.spacing(1)\n    },\n    addSongButton:{\n        margin: theme.spacing(1)\n    },\n    dialog:{\n        textAlign:'center'\n    },\n    thumbnail:{\n        width:'90%'\n    }\n}));\n\nconst DEFAULT_SONG = {\n    artist:\"\",\n    duration:0,\n    thumbnail:\"\",\n    title:\"\",\n    url:\"\"\n}\n\nfunction AddSong(){\n    const [addSong, {error}] = useMutation(ADD_SONG);\n    const classes=useStyles();\n    const [dialog,setDialog] = React.useState(false);\n    const [playable, setPlayable] = React.useState(false);\n    const [url,setUrl] = React.useState('');\n    const [song,setSong] = React.useState(DEFAULT_SONG);\n\n    React.useEffect(()=>{\n        const isPlayable = YoutubePlayer.canPlay(url);\n        setPlayable(isPlayable);\n    },[url]);\n\n    function handleCloseDialog(){\n        setDialog(false);\n    }\n\n    async function handleEditSong({player}){\n        const nestedPlayer = player.player.player;\n        let songData;\n        if(nestedPlayer.getVideoData){\n            songData = getYoutubeInfo(nestedPlayer);\n        }\n        // else if(nestedPlayer.getCurrentSound){\n        //     songData = await getSoundcloudInfo(nestedPlayer);\n        // }\n        setSong({...songData,url});\n    }\n\n    // function getSoundcloudInfo(player){\n    //     return new Promise(resolve => {\n    //         player.getCurrentSound(songData=>{\n    //             if(songData){\n    //                 resolve({\n    //                     artist: songData.user.username,\n    //                     duration: Number(songData.duration / 1000),\n    //                     thumbnail: songData.artwork_url.replace('-large','-t500x500'),\n    //                     title: songData.title,\n    //                 });\n    //             }\n    //         });\n    //     })\n    // }\n\n    function getYoutubeInfo(player){\n        const duration = player.getDuration();\n        const {title, video_id, author} = player.getVideoData();\n        const thumbnail = `http://img.youtube.com/vi/${video_id}/0.jpg`;\n        return {\n            artist: author,\n            duration,            \n            thumbnail,\n            title\n        }\n    }\n\n    async function handleAddSong(){\n        //addSong({variables:})\n        const {artist, duration, thumbnail, title, url} = song\n        try{\n            await addSong({\n                variables: {\n                    artist: artist.length > 0 ? artist : null,\n                    duration: duration > 0 ? duration : null,\n                    thumbnail: thumbnail.length > 0 ? thumbnail:null,\n                    title: title.length > 0 ? title: null,\n                    url: url.length > 0 ? url : null,\n                }\n            })\n            handleCloseDialog();\n            setSong(DEFAULT_SONG);\n            setUrl('');\n        }catch(error){\n            console.log('Error adding song',song);\n        }        \n    }\n\n    function handleChangeSong(event){\n        const {name, value} = event.target;\n        setSong(prevSong=>({\n            ...prevSong,\n            [name]:value\n        }))\n    }\n    function handleError(field){\n        return error?.graphQLErrors[0]?.extensions?.path.includes(field)\n    }\n\n    const {thumbnail,title,artist} = song;\n    return (\n        <div className={classes.container}>\n            <Dialog\n                className={classes.dialog}\n                onClose={handleCloseDialog}\n                open={dialog}\n            >\n                <DialogTitle>Edit Song</DialogTitle>\n                <DialogContent>\n                    <img \n                        alt=\"Song Thumbnail\"\n                        className={classes.thumbnail}\n                        src={thumbnail}\n                    />\n                    <TextField\n                        error={handleError('title')}\n                        fullWidth\n                        helperText={handleError('title') && \"Fill out field\"}\n                        label=\"Title\"\n                        margin=\"dense\"\n                        name=\"title\"\n                        onChange={handleChangeSong}\n                        value={title}\n                    />\n                    <TextField\n                        error={handleError('artist')}\n                        fullWidth\n                        helperText={handleError('artist') && \"Fill out field\"}\n                        label=\"Artist\"\n                        margin=\"dense\"\n                        name=\"artist\"\n                        onChange={handleChangeSong}\n                        value={artist}\n                    />\n                    <TextField\n                        error={handleError('thumbnail')}\n                        fullWidth\n                        helperText={handleError('thumbnail') && \"Fill out field\"}\n                        margin=\"dense\"\n                        label=\"Thumbnail\"\n                        name=\"thumbnail\"\n                        onChange={handleChangeSong}\n                        value={thumbnail}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button \n                        color=\"secondary\"\n                        onClick={handleCloseDialog}\n                    >\n                        Cancel\n                    </Button>\n                    <Button \n                        color=\"primary\"\n                        onClick={handleAddSong}\n                        variant=\"outlined\"\n                    >\n                        Add Song\n                    </Button>\n                </DialogActions>\n\n            </Dialog>\n            <TextField \n                className={classes.urlInput}\n                fullWidth\n                InputProps={{\n                    startAdornment:(\n                        <InputAdornment position=\"start\">\n                            <Link/>\n                        </InputAdornment>\n                    )\n                }}\n                margin=\"normal\"\n                onChange={event=>setUrl(event.target.value)}\n                placeholder=\"Add YouTube URL\"\n                type=\"url\"\n                value={url}\n            />\n            <Button\n                className={classes.addSongButton}\n                color=\"primary\"\n                disabled={!playable}\n                endIcon={<AddBoxOutlined/>}\n                onClick={()=>setDialog(true)}\n                variant=\"contained\"\n            >\n                Add\n            </Button>\n            <ReactPlayer url={url} hidden onReady={handleEditSong}/>\n        </div>\n    );\n}\n\nexport default AddSong;","import {gql} from 'apollo-boost';\n\nexport const GET_SONGS = gql`\n    subscription getSongs {\n        songs(order_by: {created_at: desc}) {\n            artist\n            duration\n            id\n            thumbnail\n            title\n            url\n        }\n    }\n`","import {createContext} from 'react';\n\nexport const PAUSE_SONG = \"PAUSE_SONG\"\nexport const PLAY_SONG = \"PLAY_SONG\"\nexport const SET_SONG = \"SET_SONG\"\n\nexport const SongContext = createContext({\n    song:{\n      id:\"d9443a71-16ab-4a7e-aff7-1a226ddeb47b\",\n      title: \"Pariah\",\n      artist: \"Steven Wilson, Ninet Tayeb\",\n      thumbnail : \"http://img.youtube.com/vi/cNTaFArEObU/0.jpg\",\n      url: \"https://youtu.be/cNTaFArEObU\",\n      duration: 279,\n    },\n    isPlaying: false\n  });\n\nfunction SongReducer(state, action){\n    switch(action.type){\n        case PAUSE_SONG:{\n            return {\n                ...state,\n                isPlaying:false\n            }\n        }\n        case PLAY_SONG:{\n            return {\n                ...state,\n                isPlaying:true\n            }\n        }\n        case SET_SONG:{\n            return {\n                ...state,\n                song: action.payload.song\n            }\n        }\n        default:\n            return state\n    }\n\n}\n\nexport default SongReducer","import React, { useEffect, useState, useContext } from 'react';\nimport { \n    Card, \n    CardActions, \n    CircularProgress, \n    CardContent, \n    CardMedia, \n    Typography, \n    IconButton, \n    makeStyles } from '@material-ui/core';\nimport { PlayArrow, Save, Pause } from '@material-ui/icons';\nimport { useSubscription, useMutation } from '@apollo/react-hooks';\nimport { GET_SONGS } from '../graphql/subscriptions';\nimport {PLAY_SONG, PAUSE_SONG, SET_SONG, SongContext} from '../reducer';\nimport { ADD_OR_REMOVE_FROM_QUEUE } from '../graphql/mutations';\n\nfunction SongList(){\n\n    const {data, loading, error} = useSubscription(GET_SONGS)\n\n    if(loading){\n        return (\n            <div style={{\n                alignItems:'center',\n                display:'flex',\n                flexDirection:'column',\n                marginTop: 50\n            }}>\n                <CircularProgress/>\n            </div>\n        );\n    }\n    if(error){return (<div>error occured in fetching songs</div>);}\n    return (\n        <div className=\"noob\" style={{\n                display:'flex',\n                flexDirection:'column',\n            }}>\n            {data.songs.map(song=>(\n                <Song key={song.id} song={song}/>\n            ))}\n        </div>\n    );\n}\n\nconst useStyles = makeStyles(theme=>({\n    container:{\n        margin: theme.spacing(1),\n        // alignContent: \"center\",\n        background: \"linear-gradient(to right, rgba(72, 85, 99, 0.5), rgba(41, 50, 60, 0.5))\"\n    },\n    songInfoContainer:{\n        alignItems:'center',\n        display:'flex',\n        justifyContent:'center'\n    },\n    songInfo:{\n        display:'flex',\n        justifyContent:'space-between',\n        width:'100%',\n    },\n    thumbnail:{\n        height:140,\n        objectFit:'cover',\n        width:140,\n    }\n}));\n\nfunction Song({song}){\n\n    const {id} = song;\n    const classes = useStyles();\n    const {state, dispatch} = useContext(SongContext);\n    const {artist,thumbnail,title} = song;\n    const [currentSongPlaying, setCurrentSongPlaying] = useState(false);\n    const [addOrRemoveFromQueue] = useMutation(ADD_OR_REMOVE_FROM_QUEUE,{\n        onCompleted: data =>{\n            localStorage.setItem('queue',JSON.stringify(data.addOrRemoveFromQueue))\n        }\n    });\n\n    useEffect(()=>{\n        const isSongPlaying = state.isPlaying && id===state.song.id;\n        setCurrentSongPlaying(isSongPlaying);\n    },[id,state.song.id, state.isPlaying])\n\n    function handleAddOrRemoveFromQueue(){\n        addOrRemoveFromQueue({\n            variables: {\n                input: {...song, __typename: 'Song'}\n            }\n        });\n    }\n\n    function handleTogglePlay(){\n        dispatch({type: SET_SONG, payload: {song}})\n        dispatch({type: state.isPlaying ? PAUSE_SONG : PLAY_SONG});\n    }\n\n    return (\n        <Card className={classes.container}>\n            <div className={classes.songInfoContainer}>\n                <CardMedia className={classes.thumbnail} image={thumbnail}/>\n                <div className={classes.songInfo}>\n                    <CardContent>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            {title}\n                        </Typography>\n                        <Typography gutterBottom variant=\"body1\" component=\"p\" color=\"textSecondary\">\n                            {artist}\n                        </Typography>\n                    </CardContent>\n                    <CardActions>\n                        <IconButton onClick={handleTogglePlay} size=\"small\" color=\"secondary\">\n                            {currentSongPlaying ? <Pause/> :<PlayArrow/>}\n                        </IconButton>\n                        <IconButton onClick={handleAddOrRemoveFromQueue} size=\"small\" color=\"secondary\">\n                            <Save/>\n                        </IconButton>\n                    </CardActions>\n                </div>\n            </div>\n        </Card>\n    );\n}\n\nexport default SongList;","import React from 'react';\nimport { Typography, Avatar, IconButton, makeStyles, useMediaQuery } from '@material-ui/core';\nimport { Delete } from '@material-ui/icons';\nimport { useMutation } from '@apollo/react-hooks';\nimport { ADD_OR_REMOVE_FROM_QUEUE } from '../graphql/mutations';\n\nfunction QueuedSongList({queue}){\n    const greaterThanMd =useMediaQuery(theme=>theme.breakpoints.up('md'));\n\n    return greaterThanMd && (\n        <div style={{margin: '10px 0'}}>\n            <Typography color=\"textSecondary\" variant=\"button\">\n                QUEUE({queue.length})\n            </Typography>\n            {queue.map((song,i)=>(\n                <QueuedSong key={i} song={song}/>\n            ))}\n        </div>\n    );\n}\n\nconst useStyles=makeStyles({\n    avatar:{\n        height:44,\n        width:44,\n    },\n    container:{\n        alignItems:'center',\n        display:'grid',\n        gridAutoFlow:'column',\n        gridGap:12,\n        gridTemplateColumns:'50px auto 50px',\n        marginTop:10,\n    },\n    songInfoContainer:{\n        overflow:\"hidden\",\n        whiteSpace:'nowrap'\n    },\n    text:{\n        overflow:\"hidden\",\n        textOverflow:'ellipsis',\n    }\n});\n\nfunction QueuedSong({song}){\n    const classes = useStyles();\n    const {artist,thumbnail,title} = song;\n    const [addOrRemoveFromQueue] = useMutation(ADD_OR_REMOVE_FROM_QUEUE,{\n        onCompleted: data =>{\n            localStorage.setItem('queue',JSON.stringify(data.addOrRemoveFromQueue))\n        }\n    });\n\n    function handleAddOrRemoveFromQueue(){\n        addOrRemoveFromQueue({\n            variables: {\n                input: {...song, __typename: 'Song'}\n            }\n        });\n    }\n\n    return (\n        <div className={classes.container}>\n            <Avatar className={classes.avatar} src={thumbnail} alt=\"Song thumbnail\"/>\n            <div className={classes.songInfoContainer}>\n                <Typography variant=\"subtitle2\" className={classes.text}>\n                    {title}\n                </Typography>\n                <Typography color=\"textSecondary\" variant=\"body2\" className={classes.text}>\n                    {artist}\n                </Typography>\n            </div>\n            <IconButton onClick={handleAddOrRemoveFromQueue}>\n                <Delete color=\"error\"/>\n            </IconButton>\n        </div>\n    );\n}\n\nexport default QueuedSongList;","import {gql} from 'apollo-boost';\n\nexport const GET_QUEUED_SONGS = gql`\n    query getQueuedSongs{\n        queue @client {\n            id\n            duration\n            title\n            artist\n            thumbnail\n            url\n        }\n    }\n`","import React, { useEffect, useState, useContext, useRef } from 'react';\nimport QueuedSongList from './QueuedSongList';\nimport { Card, CardContent, Typography, IconButton, Slider, CardMedia, makeStyles } from '@material-ui/core';\nimport { SkipPrevious, SkipNext, PlayArrow, Pause } from '@material-ui/icons';\nimport { PAUSE_SONG, PLAY_SONG, SET_SONG, SongContext} from '../reducer';\nimport { GET_QUEUED_SONGS } from '../graphql/queries';\nimport { useQuery } from '@apollo/react-hooks';\nimport ReactPlayer from 'react-player';\n\nconst useStyles = makeStyles(theme=>({\n    container:{\n        display:'flex',\n        justifyContent:'space-between',\n        background: \"linear-gradient(to right, rgba(72, 85, 99, 0.5), rgba(41, 50, 60, 0.5))\"\n    },\n    content:{\n        flex:'1 0 auto'\n    },\n    controls:{\n        alignItems:'center',\n        display:'flex',\n        paddingLeft:theme.spacing(1),\n        paddingRight:theme.spacing(1),\n    },\n    details:{\n        display:'flex',\n        flexDirection:'column',\n        padding:'0px 15px'\n    },\n    playIcon:{\n        height:38,\n        width:38\n    },\n    thumbnail:{\n        width:150\n    },\n}));\nfunction SongPlayer(){\n    const {state, dispatch} = useContext(SongContext);\n    const {data} = useQuery(GET_QUEUED_SONGS);\n    const classes = useStyles();\n    const [played, setPlayed] = useState(0);\n    const [seeking,setSeeking] = useState(false);\n    const reactPlayerRef = useRef()\n    const [playedSeconds, setPlayedSeconds] = useState(0);\n    const [positionInQueue, setPositionInQueue] = useState(0);\n\n    useEffect(()=>{\n        const songIndex = data.queue.findIndex(song=>song.id===state.song.id);\n        setPositionInQueue(songIndex);\n    },[state.song.id,data.queue]);\n\n    useEffect(()=>{\n        const nextSong = data.queue[positionInQueue+1]\n        if(played === 1 && nextSong){\n            setPlayed(0);\n            dispatch({type: SET_SONG, payload:{ song:nextSong}})\n        }\n    },[data.queue,played,dispatch,positionInQueue]);\n\n    function handlePlayNextSong(){\n        const nextSong = data.queue[positionInQueue+1]\n        if(played && nextSong){\n            dispatch({type: SET_SONG, payload:{ song:nextSong}})\n        }\n    }\n\n    function handlePlayPrevSong(){\n        const prevSong = data.queue[positionInQueue-1];\n        if(prevSong){\n            dispatch({type: SET_SONG, payload:{ song:prevSong}});\n        }\n    }\n\n    function handleProgressChange(event,newValue){\n        setPlayed(newValue);\n    }\n\n    function handleSeekMouseDown(){\n        setSeeking(true);\n    }\n\n    function handleSeekMouseUp(){\n        setSeeking(false);\n        reactPlayerRef.current.seekTo(played);\n    }\n\n    function handleTogglePlay(){\n        dispatch({type: state.isPlaying ? PAUSE_SONG : PLAY_SONG});\n    }\n\n    function formatDuration(seconds){\n        return new Date(seconds*1000).toISOString().substr(11,8)\n    }\n\n    return (\n        <>\n            <Card className={classes.container} variant=\"outlined\">\n                <div className={classes.details}>\n                    <CardContent className={classes.content}>\n                        <Typography variant=\"h5\" component=\"h3\">\n                            {state.song.title}\n                        </Typography>\n                        <Typography variant=\"subtitle1\" component=\"p\" color=\"textSecondary\">\n                            {state.song.artist}\n                        </Typography>\n                    </CardContent>\n                    <div className={classes.controls}>\n                        <IconButton onClick={handlePlayPrevSong}>\n                            <SkipPrevious/>\n                        </IconButton>\n                        <IconButton onClick={handleTogglePlay}>\n                            {state.isPlaying ? <Pause className={classes.playIcon}/> : <PlayArrow className={classes.playIcon}/>}\n                        </IconButton>\n                        <IconButton onClick={handlePlayNextSong}>\n                            <SkipNext/>\n                        </IconButton>\n                        <Typography variant=\"subtitle1\" component=\"p\" color=\"textSecondary\">\n                            {formatDuration(playedSeconds)}\n                        </Typography>\n                    </div>\n                    <Slider\n                        max={1}\n                        min={0}\n                        onChange={handleProgressChange}\n                        onMouseDown={handleSeekMouseDown}\n                        onMouseUp={handleSeekMouseUp}\n                        step={0.01}\n                        type=\"range\"\n                        value={played}\n                        color=\"secondary\"\n                    />\n                </div>\n                <ReactPlayer \n                    hidden url={state.song.url} \n                    onProgress={({played, playedSeconds})=>{\n                        if(!seeking){\n                            setPlayed(played);\n                            setPlayedSeconds(playedSeconds);\n                        }\n                    }}\n                    playing={state.isPlaying}\n                    ref={reactPlayerRef}\n                    />\n                <CardMedia\n                    className={classes.thumbnail}\n                    image={state.song.thumbnail}\n                />\n            </Card>\n            <QueuedSongList queue={data.queue}/>\n        </>\n    );\n}\n\nexport default SongPlayer;","import React from 'react';\nimport Header from './components/Header';\nimport AddSong from './components/AddSong';\nimport SongList from './components/SongList';\nimport SongPlayer from './components/SongPlayer';\nimport { Grid, useMediaQuery } from '@material-ui/core';\nimport SongReducer, {SongContext} from './reducer';\n\n\nfunction App() {\n  const greaterThanMd =useMediaQuery(theme => theme.breakpoints.up('md'));\n  const initialSongState = React.useContext(SongContext);\n  const [state, dispatch] = React.useReducer(SongReducer,initialSongState);\n  \n  if(greaterThanMd) {return (\n    <SongContext.Provider value={{state,dispatch}}>\n\n      <Header/>\n      <Grid \n        container \n        spacing={3}\n        style={{\n          paddingTop: 80,\n          // background: \"linear-gradient(to right, #0f2027, #203a43, #2c5364)\"\n        }}\n      >\n        <Grid item xs={12} md={7}>\n          <AddSong/>\n          <SongList/>\n        </Grid>\n        <Grid item xs={12} md={5} style={\n          {\n            position:'fixed',\n            right: 0,\n            top:70,\n            width:'100%',\n          }\n        }>\n          <SongPlayer/>\n        </Grid>\n      </Grid>\n    </SongContext.Provider>\n  );}else{\n    return(\n      <>\n        <SongContext.Provider value={{state,dispatch}}>\n          <Header/>\n          <Grid \n            container \n            spacing={3}\n            style={{\n              paddingTop: 80,\n              // background: \"linear-gradient(to right, #0f2027, #203a43, #2c5364)\"\n            }}\n          >\n            <Grid item xs={12}>\n              <SongPlayer/>\n            </Grid>\n            <Grid item xs={12} style={\n              {\n                top:170,\n                width:'100%'\n              }\n            } >\n              <AddSong/>\n              <SongList/>\n            </Grid>\n          </Grid>\n        </SongContext.Provider>\n      </>\n    )\n  }\n}\n\nexport default App;\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    overrides: {\n        MuiCssBaseline: {\n          '@global': {\n             body: {\n               background: 'linear-gradient(to right, #0f2027, #203a43, #2c5364)',\n               backgroundRepeat: \"no-repeat\",\n               backgroundAttachment: \"fixed\",\n            },\n          },\n        },\n      },\n    palette:{\n        type: \"dark\",\n        primary: {\n            main: \"#2C5364\",\n        } ,\n        secondary: {\n            main: \"#ffffff\"\n        }\n    },\n    typography: {\n        fontFamily: 'Ubuntu',\n      },\n});\n\nexport default theme;","import ApolloClient from 'apollo-client';\nimport {WebSocketLink} from 'apollo-link-ws';\nimport {InMemoryCache} from 'apollo-cache-inmemory';\nimport {gql} from 'apollo-boost';\nimport { GET_QUEUED_SONGS } from './queries';\n\nconst client = new ApolloClient({\n    link: new WebSocketLink({\n        uri: 'wss://react-music-player-argon.herokuapp.com/v1/graphql',\n        options: {\n            reconnect: true\n        }\n    }),\n    cache: new InMemoryCache(),\n    typeDefs: gql`\n        type Song {\n            id: uuid!,\n            title: String!,\n            artist: String!,\n            thumbnail: String!,\n            url: String!,\n            duration: Float!\n        }\n\n        input SongInput {\n            id: uuid!,\n            title: String!,\n            artist: String!,\n            thumbnail: String!,\n            url: String!,\n            duration: Float!\n        }\n\n        type Query{\n            queue: [Song]!\n        }\n\n        type Mutation{\n            addOrRemoveFromQueue(input: SongInput): [Song]!\n        }\n    `,\n    resolvers: {\n        Mutation: {\n            addOrRemoveFromQueue: (_, {input}, {cache})=>{\n                const queryResult = cache.readQuery({\n                    query: GET_QUEUED_SONGS\n                })\n                if(queryResult){\n                    const { queue } =queryResult;\n                    const isInQueue = queue.some(song=> song.id === input.id);\n                    const newQueue = isInQueue ? \n                        queue.filter(song=>song.id !== input.id)\n                        : [...queue,input]\n                    cache.writeQuery({\n                        query: GET_QUEUED_SONGS,\n                        data:{queue:newQueue}\n                    })\n                    return newQueue\n                }\n                return [];\n            }\n        }\n    }\n});\n\nconst localQueue = localStorage.getItem('queue')\nconst hasQueue = Boolean(localQueue);\n\nconst data = {\n    queue: hasQueue ? JSON.parse(localQueue) : []\n}\n\nclient.writeData({data});\n\nexport default client;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {MuiThemeProvider, CssBaseline} from '@material-ui/core'\nimport theme from './theme';\nimport {ApolloProvider} from '@apollo/react-hooks';\nimport client from './graphql/client';\n\nReactDOM.render(\n    <ApolloProvider client={client}>\n        <MuiThemeProvider theme={theme}>\n            <CssBaseline/>\n            <App/>\n        </MuiThemeProvider>\n    </ApolloProvider>,\n     \n    document.getElementById('root')\n);\n"],"sourceRoot":""}