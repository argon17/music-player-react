{"version":3,"sources":["components/Header.js","graphql/mutations.js","components/AddSong.js","graphql/subscriptions.js","reducer.js","components/SongList.js","components/QueuedSongList.js","graphql/queries.js","components/SongPlayer.js","components/Footer.js","App.js","theme.js","graphql/client.js","index.js","assets/identity.png"],"names":["useStyles","makeStyles","theme","title","marginLeft","spacing","avatar","height","objectFit","info","display","position","right","Header","greaterThanMd","useMediaQuery","breakpoints","up","classes","AppBar","color","Toolbar","Typography","className","variant","component","href","src","identity","alt","ADD_OR_REMOVE_FROM_QUEUE","gql","ADD_SONG","container","alignItems","urlInput","margin","addSongButton","dialog","textAlign","thumbnail","width","DEFAULT_SONG","artist","duration","url","AddSong","useMutation","addSong","error","React","useState","setDialog","playable","setPlayable","setUrl","song","setSong","handleCloseDialog","a","player","nestedPlayer","getVideoData","songData","getYoutubeInfo","getDuration","video_id","author","variables","length","console","log","JSON","stringify","handleChangeSong","event","target","name","value","prevSong","handleError","field","networkError","extensions","path","includes","useEffect","isPlayable","YoutubePlayer","canPlay","Dialog","onClose","PaperProps","style","background","boxShadow","open","DialogTitle","DialogContent","TextField","fullWidth","helperText","label","onChange","DialogActions","Button","onClick","InputProps","startAdornment","InputAdornment","Link","placeholder","type","disabled","endIcon","AddBoxOutlined","hidden","onReady","GET_SONGS","SongContext","createContext","id","isPlaying","SongReducer","state","action","payload","songInfoContainer","justifyContent","songInfo","Song","useContext","dispatch","currentSongPlaying","setCurrentSongPlaying","onCompleted","data","localStorage","setItem","addOrRemoveFromQueue","isSongPlaying","Card","CardMedia","image","CardContent","gutterBottom","CardActions","IconButton","size","Pause","PlayArrow","input","__typename","AddCircleOutline","SongList","useSubscription","loading","flexDirection","songs","map","key","gridAutoFlow","gridGap","gridTemplateColumns","marginTop","overflow","whiteSpace","text","textOverflow","QueuedSong","Avatar","Delete","QueuedSongList","queue","i","GET_QUEUED_SONGS","content","flex","controls","paddingLeft","paddingRight","timestamps","details","padding","playIcon","SongPlayer","useQuery","played","setPlayed","seeking","setSeeking","reactPlayerRef","useRef","playedSeconds","setPlayedSeconds","positionInQueue","setPositionInQueue","formatDuration","seconds","Date","toISOString","substr","songIndex","findIndex","nextSong","SkipPrevious","SkipNext","Slider","max","min","newValue","onMouseDown","onMouseUp","current","seekTo","step","onProgress","playing","ref","toolbar","Footer","Container","rel","App","initialSongState","useReducer","Provider","Grid","paddingTop","item","xs","md","top","createMuiTheme","overrides","MuiCssBaseline","body","backgroundRepeat","backgroundAttachment","palette","primary","main","secondary","typography","fontFamily","typeDefs","client","ApolloClient","link","WebSocketLink","uri","options","reconnect","cache","InMemoryCache","resolvers","Mutation","_","queryResults","readQuery","query","newQueue","some","filter","writeQuery","localQueue","getItem","hasQueue","Boolean","parse","ReactDOM","render","ApolloProvider","CssBaseline","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.3b4b91f9.chunk.js","sourcesContent":["import React from 'react';\nimport { AppBar, Toolbar, Typography, makeStyles, useMediaQuery } from '@material-ui/core';\nimport MusicNoteSharpIcon from '@material-ui/icons/MusicNoteSharp';\nimport identity from '../assets/identity.png'\n\nconst useStyles = makeStyles(theme=>({\n    title:{\n        marginLeft: theme.spacing(1)\n    },\n    avatar:{\n        height:25,\n        objectFit: 'contain'\n    },\n    info:{\n        // marginRight:50\n        display:'flex',\n        position:'absolute',\n        right:40\n    }\n}));\n\nfunction Header(){\n    const greaterThanMd = useMediaQuery(theme => theme.breakpoints.up('md'));\n\n    const classes=useStyles();\n    return (\n        <AppBar color=\"primary\" position='fixed'>\n            <Toolbar>\n                <MusicNoteSharpIcon/>\n                <Typography className={classes.title} variant=\"h6\" component=\"h1\">\n                    Music Player\n                </Typography>\n                <div className={classes.info} >\n                    {greaterThanMd && \n                        <>\n                        <Typography variant=\"body1\" color=\"inherit\">\n                            Developed and designed by argon &nbsp;\n                        </Typography>\n                        <a href=\"https://github.com/argon17\" >\n                            <img src={identity} className={classes.avatar} alt=\"argon\" />\n                        </a>\n                        </>\n                    }\n                </div>\n            </Toolbar>\n        </AppBar>\n    );\n}\n\nexport default Header;","import {gql} from '@apollo/client';\n\nexport const ADD_OR_REMOVE_FROM_QUEUE = gql`\n    mutation addOrRemoveFromQueue($input: SongInput!){\n        addOrRemoveFromQueue(input: $input) @client\n    }\n`\nexport const ADD_SONG = gql`\n    mutation addSong($title: String!, $artist: String!, $thumbnail: String!, $duration: Float!, $url: String!) {\n        insert_songs(objects: {title: $title, artist: $artist, thumbnail: $thumbnail, duration: $duration, url: $url}) {\n            affected_rows\n        }\n    }\n`","import React from 'react';\nimport { Dialog, DialogActions, TextField, InputAdornment, Button, DialogTitle, DialogContent, makeStyles } from '@material-ui/core';\nimport { Link, AddBoxOutlined } from '@material-ui/icons'\nimport ReactPlayer from 'react-player';\nimport YoutubePlayer from 'react-player/lib/players/YouTube';\nimport {ADD_SONG} from '../graphql/mutations';\nimport { useMutation } from '@apollo/client';\n\nconst useStyles = makeStyles(theme => ({\n    container:{\n        display: 'flex',\n        alignItems:'center',\n    },\n    urlInput:{\n        margin: theme.spacing(1)\n    },\n    addSongButton:{\n        margin: theme.spacing(1)\n    },\n    dialog:{\n        textAlign:'center',\n    },\n    thumbnail:{\n        width:'90%'\n    }\n}));\n\nconst DEFAULT_SONG = {\n    artist:\"\",\n    duration:0,\n    thumbnail:\"\",\n    title:\"\",\n    url:\"\"\n}\n\nfunction AddSong(){\n    const [addSong, {error}] = useMutation(ADD_SONG);\n    const classes=useStyles();\n    const [dialog,setDialog] = React.useState(false);\n    const [playable, setPlayable] = React.useState(false);\n    const [url,setUrl] = React.useState('');\n    const [song,setSong] = React.useState(DEFAULT_SONG);\n\n    React.useEffect(()=>{\n        const isPlayable = YoutubePlayer.canPlay(url);\n        setPlayable(isPlayable);\n    },[url]);\n\n    function handleCloseDialog(){\n        setDialog(false);\n    }\n\n    async function handleEditSong({player}){\n        const nestedPlayer = player.player.player;\n        let songData;\n        if(nestedPlayer.getVideoData){\n            songData = getYoutubeInfo(nestedPlayer);\n        }\n        setSong({...songData,url});\n    }\n\n    function getYoutubeInfo(player){\n        const duration = player.getDuration();\n        const {title, video_id, author} = player.getVideoData();\n        const thumbnail = `http://img.youtube.com/vi/${video_id}/0.jpg`;\n        return {\n            artist: author,\n            duration,            \n            thumbnail,\n            title\n        }\n    }\n\n    async function handleAddSong(){\n\n        const {artist, duration, thumbnail, title, url} = song\n        try{\n            await addSong({\n                variables: {\n                    artist: artist.length > 0 ? artist : null,\n                    duration: duration > 0 ? duration : null,\n                    thumbnail: thumbnail.length > 0 ? thumbnail:null,\n                    title: title.length > 0 ? title: null,\n                    url: url.length > 0 ? url : null,\n                }\n            })\n            handleCloseDialog();\n            setSong(DEFAULT_SONG);\n            setUrl('');\n        }catch(error){\n            console.log(JSON.stringify(error));\n        }        \n    }\n\n    function handleChangeSong(event){\n        const {name, value} = event.target;\n        setSong(prevSong=>({\n            ...prevSong,\n            [name]:value\n        }))\n    }\n    function handleError(field){\n        return error?.networkError?.extensions?.path.includes(field)\n    }\n\n    const {thumbnail,title,artist} = song;\n    return (\n        <div className={classes.container}>\n            <Dialog\n                className={classes.dialog}\n                onClose={handleCloseDialog}\n                PaperProps={{\n                    style: {\n                      background: \"linear-gradient(to right, #0f2027, #203a43, #2c5364)\",\n                      boxShadow: \"none\"\n                    },\n                  }}\n                // style={{backgroundColor:'transparent'}}\n                open={dialog}\n            >\n                <DialogTitle>Edit Song</DialogTitle>\n                <DialogContent>\n                    <img \n                        alt=\"Song Thumbnail\"\n                        className={classes.thumbnail}\n                        src={thumbnail}\n                    />\n                    <TextField\n                        error={handleError('title')}\n                        fullWidth\n                        helperText={handleError('title') && \"Invalid Input\"}\n                        label=\"Title\"\n                        margin=\"dense\"\n                        name=\"title\"\n                        onChange={handleChangeSong}\n                        value={title}\n                    />\n                    <TextField\n                        error={handleError('artist')}\n                        fullWidth\n                        helperText={handleError('artist') && \"Invalid Input\"}\n                        label=\"Artist\"\n                        margin=\"dense\"\n                        name=\"artist\"\n                        onChange={handleChangeSong}\n                        value={artist}\n                    />\n                    <TextField\n                        error={handleError('thumbnail')}\n                        fullWidth\n                        helperText={handleError('thumbnail') && \"Invalid Input\"}\n                        margin=\"dense\"\n                        label=\"Thumbnail\"\n                        name=\"thumbnail\"\n                        onChange={handleChangeSong}\n                        value={thumbnail}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button \n                        color=\"secondary\"\n                        onClick={handleCloseDialog}\n                    >\n                        Cancel\n                    </Button>\n                    <Button \n                        color=\"white\"\n                        onClick={handleAddSong}\n                        variant=\"outlined\"\n                    >\n                        Add Song\n                    </Button>\n                </DialogActions>\n\n            </Dialog>\n            <TextField \n                className={classes.urlInput}\n                fullWidth\n                InputProps={{\n                    startAdornment:(\n                        <InputAdornment position=\"start\">\n                            <Link/>\n                        </InputAdornment>\n                    )\n                }}\n                margin=\"normal\"\n                onChange={event=>setUrl(event.target.value)}\n                placeholder=\"Add YouTube URL\"\n                type=\"url\"\n                value={url}\n            />\n            <Button\n                className={classes.addSongButton}\n                color=\"primary\"\n                disabled={!playable}\n                endIcon={<AddBoxOutlined/>}\n                onClick={()=>setDialog(true)}\n                variant=\"contained\"\n            >\n                Add\n            </Button>\n            <ReactPlayer url={url} hidden onReady={handleEditSong}/>\n        </div>\n    );\n}\n\nexport default AddSong;","import {gql} from 'apollo-boost';\n\nexport const GET_SONGS = gql`\n    subscription getSongs {\n        songs(order_by: {created_at: desc}) {\n            artist\n            duration\n            id\n            thumbnail\n            title\n            url\n        }\n    }\n`","import {createContext} from 'react';\n\nexport const PAUSE_SONG = \"PAUSE_SONG\"\nexport const PLAY_SONG = \"PLAY_SONG\"\nexport const SET_SONG = \"SET_SONG\"\n\nexport const SongContext = createContext({\n    song:{\n      id:\"d9443a71-16ab-4a7e-aff7-1a226ddeb47b\",\n      title: \"Pariah\",\n      artist: \"Steven Wilson, Ninet Tayeb\",\n      thumbnail : \"http://img.youtube.com/vi/cNTaFArEObU/0.jpg\",\n      url: \"https://youtu.be/cNTaFArEObU\",\n      duration: 279,\n    },\n    isPlaying: false\n  });\n\nfunction SongReducer(state, action){\n    switch(action.type){\n        case PAUSE_SONG:{\n            return {\n                ...state,\n                isPlaying:false\n            }\n        }\n        case PLAY_SONG:{\n            return {\n                ...state,\n                isPlaying:true\n            }\n        }\n        case SET_SONG:{\n            return {\n                ...state,\n                song: action.payload.song\n            }\n        }\n        default:\n            return state\n    }\n\n}\n\nexport default SongReducer","import React, { useContext, useEffect, useState } from 'react';\nimport { \n    Card, \n    CardActions, \n    CardContent, \n    CardMedia, \n    Typography, \n    IconButton, \n    makeStyles } from '@material-ui/core';\nimport { Pause, PlayArrow, AddCircleOutline } from '@material-ui/icons';\nimport { useMutation, useSubscription } from '@apollo/client';\nimport { GET_SONGS } from '../graphql/subscriptions'\nimport {PLAY_SONG, PAUSE_SONG, SET_SONG, SongContext} from '../reducer';\nimport { ADD_OR_REMOVE_FROM_QUEUE } from '../graphql/mutations';\n\nfunction SongList(){\n\n    const {data, loading, error} = useSubscription(GET_SONGS)\n\n    if(loading){\n        return (\n            <div style={{\n                alignItems:'center',\n                display:'flex',\n                flexDirection:'column',\n            }}>\n                Loading songs...\n            </div>\n        );\n    }\n    if(error){return (<div>error occured in fetching songs</div>);}\n    return (\n        <div className=\"noob\" style={{\n                display:'flex',\n                flexDirection:'column',\n            }}>\n            {data.songs.map(song=>(\n                <Song key={song.id} song={song}/>\n            ))}\n        </div>\n    );\n}\n\nconst useStyles = makeStyles(theme=>({\n    container:{\n        margin: theme.spacing(1),\n        background: \"linear-gradient(to right, rgba(72, 85, 99, 0.5), rgba(41, 50, 60, 0.5))\"\n    },\n    songInfoContainer:{\n        alignItems:'center',\n        display:'flex',\n        justifyContent:'center'\n    },\n    songInfo:{\n        display:'flex',\n        justifyContent:'space-between',\n        width:'100%',\n    },\n    thumbnail:{\n        height:140,\n        objectFit:'cover',\n        width:140,\n    }\n}));\n\nfunction Song({song}){\n\n    const {id} = song;\n    const classes = useStyles();\n    const {state, dispatch} = useContext(SongContext);\n    const {artist,thumbnail,title} = song;\n    const [currentSongPlaying, setCurrentSongPlaying] = useState(false);\n\n    const [addOrRemoveFromQueue] = useMutation(ADD_OR_REMOVE_FROM_QUEUE,{\n        onCompleted: data =>{\n            localStorage.setItem('queue',JSON.stringify(data.addOrRemoveFromQueue))\n        }\n    });\n\n    useEffect(()=>{\n        const isSongPlaying = state.isPlaying && id===state.song.id;\n        setCurrentSongPlaying(isSongPlaying);\n    },[id,state.song.id, state.isPlaying])\n\n    function handleAddOrRemoveFromQueue(){\n        addOrRemoveFromQueue({\n            variables: {\n                input: {...song, __typename: 'Song'}\n            }\n        });\n    }\n\n    function handleTogglePlay(){\n\n        dispatch({type: SET_SONG, payload: {song}})\n\n        if(currentSongPlaying){\n            dispatch({type: state.isPlaying ? PAUSE_SONG : PLAY_SONG});\n        }else{\n            dispatch({type: PLAY_SONG})\n        }\n\n    }\n\n    return (\n        <Card className={classes.container}>\n            <div className={classes.songInfoContainer}>\n                <CardMedia className={classes.thumbnail} image={thumbnail}/>\n                <div className={classes.songInfo}>\n                    <CardContent>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            {title}\n                        </Typography>\n                        <Typography gutterBottom variant=\"body1\" component=\"p\" color=\"textSecondary\">\n                            {artist}\n                        </Typography>\n                    </CardContent>\n                    <CardActions>\n                        <IconButton onClick={handleTogglePlay} size=\"medium\" color=\"secondary\">\n                            {currentSongPlaying ? <Pause/> :<PlayArrow/>}\n                        </IconButton>\n                        <IconButton onClick={handleAddOrRemoveFromQueue} size=\"medium\" color=\"secondary\">\n                            <AddCircleOutline/>\n                        </IconButton>\n                    </CardActions>\n                </div>\n            </div>\n        </Card>\n    );\n}\n\nexport default SongList;","import React from 'react';\nimport { \n    Typography, \n    Avatar, \n    IconButton, \n    makeStyles, \n    useMediaQuery } from '@material-ui/core';\nimport { Delete } from '@material-ui/icons';\n\nimport { useMutation } from '@apollo/client';\nimport { ADD_OR_REMOVE_FROM_QUEUE } from '../graphql/mutations';\n\nfunction QueuedSongList({queue}){\n    const greaterThanMd =useMediaQuery(theme=>theme.breakpoints.up('md'));\n\n    return greaterThanMd && (\n        <div style={{margin: '10px 0'}}>\n            <Typography color=\"textSecondary\" variant=\"button\">\n                QUEUE({queue.length})\n            </Typography>\n            {queue.map((song,i)=>(\n                <QueuedSong key={i} song={song}/>\n            ))}\n        </div>\n    );\n}\n\nconst useStyles=makeStyles({\n    avatar:{\n        height:44,\n        width:44,\n    },\n    container:{\n        alignItems:'center',\n        display:'grid',\n        gridAutoFlow:'column',\n        gridGap:12,\n        gridTemplateColumns:'50px auto 50px',\n        marginTop:10,\n    },\n    songInfoContainer:{\n        overflow:\"hidden\",\n        whiteSpace:'nowrap'\n    },\n    text:{\n        overflow:\"hidden\",\n        textOverflow:'ellipsis',\n    }\n});\n\nfunction QueuedSong({song}){\n    const classes = useStyles();\n    const {artist,thumbnail,title} = song;\n    const [addOrRemoveFromQueue] = useMutation(ADD_OR_REMOVE_FROM_QUEUE,{\n        onCompleted: data =>{\n            localStorage.setItem('queue',JSON.stringify(data.addOrRemoveFromQueue))\n        }\n    });\n\n    function handleAddOrRemoveFromQueue(){\n        addOrRemoveFromQueue({\n            variables: {\n                input: {...song, __typename: 'Song'}\n            }\n        });\n    }\n\n    return (\n        <div className={classes.container}>\n            <Avatar className={classes.avatar} src={thumbnail} alt=\"Song thumbnail\"/>\n            <div className={classes.songInfoContainer}>\n                <Typography variant=\"subtitle2\" className={classes.text}>\n                    {title}\n                </Typography>\n                <Typography color=\"textSecondary\" variant=\"body2\" className={classes.text}>\n                    {artist}\n                </Typography>\n            </div>\n            <IconButton onClick={handleAddOrRemoveFromQueue}>\n                <Delete color=\"error\"/>\n            </IconButton>\n        </div>\n    );\n}\n\nexport default QueuedSongList;","import {gql} from 'apollo-boost';\n\nexport const GET_QUEUED_SONGS = gql`\n    query getQueuedSongs{\n        queue @client {\n            id\n            duration\n            title\n            artist\n            thumbnail\n            url\n        }\n    }\n`","import React, { useEffect, useContext, useRef, useState } from 'react'\nimport QueuedSongList from './QueuedSongList';\nimport { Card, CardContent, Typography, IconButton, Slider, CardMedia, makeStyles } from '@material-ui/core';\nimport { SkipPrevious, SkipNext, PlayArrow, Pause } from '@material-ui/icons';\nimport { PAUSE_SONG, PLAY_SONG, SET_SONG, SongContext} from '../reducer';\nimport { useQuery } from '@apollo/client';\nimport { GET_QUEUED_SONGS } from '../graphql/queries';\nimport ReactPlayer from 'react-player';\n\nconst useStyles = makeStyles(theme=>({\n    container:{\n        display:'flex',\n        justifyContent:'space-between',\n        background: \"linear-gradient(to right, rgba(72, 85, 99, 0.5), rgba(41, 50, 60, 0.5))\"\n    },\n    content:{\n        flex:'1 0 auto'\n    },\n    controls:{\n        alignItems:'center',\n        display:'flex',\n        paddingLeft:theme.spacing(1),\n        paddingRight:theme.spacing(1),\n    },\n    timestamps:{\n        display:'flex',\n        justifyContent:'space-between'\n    },\n    details:{\n        display:'flex',\n        flexDirection:'column',\n        padding:'0px 15px'\n    },\n    playIcon:{\n        height:38,\n        width:38\n    },\n    thumbnail:{\n        width:150\n    },\n}));\nfunction SongPlayer(){\n    const {state, dispatch} = useContext(SongContext);\n    const {data} = useQuery(GET_QUEUED_SONGS);\n    const classes = useStyles();\n    const [played, setPlayed] = useState(0);\n    const [seeking,setSeeking] = useState(false);\n    const reactPlayerRef = useRef()\n    const [playedSeconds, setPlayedSeconds] = useState(0);\n    const [positionInQueue, setPositionInQueue] = useState(0);\n\n    useEffect(()=>{\n        const songIndex = data.queue.findIndex(song=>song.id===state.song.id);\n        setPositionInQueue(songIndex);\n    },[state.song.id,data.queue]);\n\n    useEffect(()=>{\n        const nextSong = data.queue[positionInQueue+1]\n        if(played === 1 && nextSong){\n            setPlayed(0);\n            dispatch({type: SET_SONG, payload:{ song:nextSong}})\n        }\n    },[data.queue,played,dispatch,positionInQueue]);\n\n    function handlePlayNextSong(){\n        const nextSong = data.queue[positionInQueue+1]\n        if(played && nextSong){\n            dispatch({type: SET_SONG, payload:{ song:nextSong}})\n        }\n    }\n\n    function handlePlayPrevSong(){\n        const prevSong = data.queue[positionInQueue-1];\n        if(prevSong){\n            dispatch({type: SET_SONG, payload:{ song:prevSong}});\n        }\n    }\n\n    function handleProgressChange(event,newValue){\n        setPlayed(newValue);\n    }\n\n    function handleSeekMouseDown(){\n        setSeeking(true);\n    }\n\n    function handleSeekMouseUp(){\n        setSeeking(false);\n        reactPlayerRef.current.seekTo(played);\n    }\n\n    function handleTogglePlay(){\n        dispatch({type: state.isPlaying ? PAUSE_SONG : PLAY_SONG});\n    }\n\n    function formatDuration(seconds){\n        return new Date(seconds*1000).toISOString().substr(11,8)\n    }\n\n    return (\n        <>\n            <Card className={classes.container} variant=\"outlined\">\n                <div className={classes.details}>\n                    <CardContent className={classes.content}>\n                        <Typography variant=\"h5\" component=\"h3\">\n                            {state.song.title}\n                        </Typography>\n                        <Typography variant=\"subtitle1\" component=\"p\" color=\"textSecondary\">\n                            {state.song.artist}\n                        </Typography>\n                    </CardContent>\n                    <div className={classes.controls}>\n                        <IconButton onClick={handlePlayPrevSong}>\n                            <SkipPrevious/>\n                        </IconButton>\n                        <IconButton onClick={handleTogglePlay}>\n                            {state.isPlaying ? <Pause className={classes.playIcon}/> : <PlayArrow className={classes.playIcon}/>}\n                        </IconButton>\n                        <IconButton onClick={handlePlayNextSong}>\n                            <SkipNext/>\n                        </IconButton>\n                    </div>\n                    <div className={classes.timestamps}>\n                        <Typography variant=\"subtitle1\" component=\"p\" color=\"textSecondary\">\n                            {formatDuration(playedSeconds)}\n                        </Typography>\n                        <Typography variant=\"subtitle1\" component=\"p\" color=\"textSecondary\">\n                            {formatDuration(state.song.duration)}\n                        </Typography>\n                    </div>\n                    <Slider\n                        max={1}\n                        min={0}\n                        onChange={handleProgressChange}\n                        onMouseDown={handleSeekMouseDown}\n                        onMouseUp={handleSeekMouseUp}\n                        step={0.01}\n                        type=\"range\"\n                        value={played}\n                        color=\"secondary\"\n                    />\n                </div>\n                <ReactPlayer \n                    hidden url={state.song.url} \n                    onProgress={({played, playedSeconds})=>{\n                        if(!seeking){\n                            setPlayed(played);\n                            setPlayedSeconds(playedSeconds);\n                        }\n                    }}\n                    playing={state.isPlaying}\n                    ref={reactPlayerRef}\n                    />\n                <CardMedia\n                    className={classes.thumbnail}\n                    image={state.song.thumbnail}\n                />\n            </Card>\n            <QueuedSongList queue={data.queue}/>\n        </>\n    );\n}\n\nexport default SongPlayer;","import React from 'react'\nimport { makeStyles, AppBar, Container, Toolbar, Typography } from '@material-ui/core'\nimport identity from '../assets/identity.png'\n\nconst useStyles = makeStyles({\n    avatar:{\n        height:25,\n        objectFit: 'contain'\n    },\n    toolbar:{\n        display:'flex',\n        alignItems:'center',\n        justifyContent:'center',\n    }\n});\n\nconst Footer = () => {\n    const classes = useStyles()\n    return (\n        <AppBar position=\"static\" color=\"primary\">\n          <Container>\n            <Toolbar className={classes.toolbar} >\n              <Typography variant=\"body1\" color=\"inherit\">\n                Developed and designed by argon &nbsp;\n              </Typography>\n              <a href=\"https://github.com/argon17\" target=\"_blank\" rel=\"noopener noreferrer\" >\n                <img src={identity} className={classes.avatar} alt=\"argon\" />\n              </a>\n            </Toolbar>\n          </Container>\n        </AppBar>\n    )\n}\n\nexport default Footer\n","import React from 'react';\nimport Header from './components/Header';\nimport AddSong from './components/AddSong';\nimport SongList from './components/SongList';\nimport SongPlayer from './components/SongPlayer';\nimport Footer from './components/Footer';\nimport { Grid, useMediaQuery } from '@material-ui/core';\nimport SongReducer, {SongContext} from './reducer';\n\n\nfunction App() {\n  const greaterThanMd = useMediaQuery(theme => theme.breakpoints.up('md'));\n\n  const initialSongState = React.useContext(SongContext);\n  const [state, dispatch] = React.useReducer(SongReducer,initialSongState);\n  \n  if(greaterThanMd) {return (\n    <SongContext.Provider value={{state,dispatch}}>\n\n      <Header/>\n      <Grid \n        container \n        spacing={3}\n        style={{\n          paddingTop: 80,\n          // background: \"linear-gradient(to right, #0f2027, #203a43, #2c5364)\"\n        }}\n      >\n        <Grid item xs={12} md={7}>\n          <AddSong/>\n          <SongList/>\n        </Grid>\n        <Grid item xs={12} md={5} style={\n          {\n            position:'fixed',\n            right: 0,\n            top:70,\n            width:'100%',\n          }\n        }>\n          <SongPlayer/>\n        </Grid>\n      </Grid>\n    </SongContext.Provider>\n  );}else{\n    return(\n      <>\n        <SongContext.Provider value={{state,dispatch}}>\n          <Header/>\n          <Grid \n            container \n            spacing={3}\n            style={{\n              paddingTop: 80,\n              // background: \"linear-gradient(to right, #0f2027, #203a43, #2c5364)\"\n            }}\n          >\n            <Grid item xs={12}>\n              <SongPlayer/>\n            </Grid>\n            <Grid item xs={12} style={\n              {\n                top:170,\n                width:'100%'\n              }\n            } >\n              <AddSong/>\n              <SongList/>\n            </Grid>\n          </Grid>\n          <Footer/>\n        </SongContext.Provider>\n      </>\n    )\n  }\n}\n\nexport default App;\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    overrides: {\n        MuiCssBaseline: {\n          '@global': {\n             body: {\n               background: 'linear-gradient(to right, #0f2027, #203a43, #2c5364)',\n               backgroundRepeat: \"no-repeat\",\n               backgroundAttachment: \"fixed\",\n            },\n          },\n        },\n      },\n    palette:{\n        type: \"dark\",\n        primary: {\n            main: \"#2C5364\",\n        } ,\n        secondary: {\n            main: \"#ffffff\"\n        }\n    },\n    typography: {\n        fontFamily: 'Ubuntu',\n      },\n});\n\nexport default theme;","import { ApolloClient, InMemoryCache, gql } from '@apollo/client';\nimport { WebSocketLink } from '@apollo/client/link/ws';\nimport { GET_QUEUED_SONGS } from './queries';\n\nconst typeDefs = gql`\n\n  type Song{\n    id: uuid!\n    title: String!\n    artist: String!\n    thumbnail: String!\n    duration: Float!\n    url: String!\n  }\n\n  input SongInput{\n    id: uuid!\n    title: String!\n    artist: String!\n    thumbnail: String!\n    duration: Float!\n    url: String!\n  }\n  type Query{\n    queue: [Song]!\n  }\n\n  type Mutation{\n    addOrRemoveFromQueue(input: SongInput!): [Song]!\n  }\n\n`;\n\n\nconst client = new ApolloClient({\n    link: new WebSocketLink({\n      uri: 'wss://react-music-player-argon.herokuapp.com/v1/graphql',\n      options: {\n        reconnect: true\n      }\n    }),\n    cache: new InMemoryCache(),\n    typeDefs,\n    resolvers: {\n      Mutation: {\n        addOrRemoveFromQueue: (_, { input }, { cache }) => {\n          const queryResults = cache.readQuery({\n            query: GET_QUEUED_SONGS\n          })\n          if(queryResults){\n            const {queue} = queryResults\n            const isInQueue = queue.some( song => song.id === input.id )\n            const newQueue = isInQueue ? \n              queue.filter(song => song.id !== input.id )\n              : [...queue, input ]\n            cache.writeQuery({\n              query: GET_QUEUED_SONGS,\n              data: {queue: newQueue}\n            })\n            return newQueue\n          }\n          return []\n        }\n      }\n    }\n  });\n\n\n  const localQueue = localStorage.getItem('queue')\n  const hasQueue = Boolean(localQueue);\n\n  client.writeQuery({\n    query: GET_QUEUED_SONGS,\n    data: {\n      queue: hasQueue ? JSON.parse(localQueue) : []\n  },\n  });\n\n  export default client;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { MuiThemeProvider, CssBaseline } from \"@material-ui/core\";\nimport theme from \"./theme\";\nimport client from './graphql/client';\nimport { ApolloProvider } from '@apollo/client/react';\n\nReactDOM.render(\n    <ApolloProvider client={client}>\n        <MuiThemeProvider theme={theme}>\n            <CssBaseline/>\n            <App/>\n        </MuiThemeProvider>\n    </ApolloProvider>,\n     \n    document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/identity.3f5fb37f.png\";"],"sourceRoot":""}